[{"/home/juani/src/exams/microsourcing/yp-client/src/index.js":"1","/home/juani/src/exams/microsourcing/yp-client/src/containers/App/index.js":"2","/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/List/index.js":"3","/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/View/index.js":"4","/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/Create/index.js":"5","/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/Update/index.js":"6","/home/juani/src/exams/microsourcing/yp-client/src/helpers/index.js":"7"},{"size":274,"mtime":1610866798534,"results":"8","hashOfConfig":"9"},{"size":544,"mtime":1610867068915,"results":"10","hashOfConfig":"9"},{"size":11549,"mtime":1610872683024,"results":"11","hashOfConfig":"9"},{"size":3030,"mtime":1610872793522,"results":"12","hashOfConfig":"9"},{"size":3555,"mtime":1610868052491,"results":"13","hashOfConfig":"9"},{"size":4389,"mtime":1610869320595,"results":"14","hashOfConfig":"9"},{"size":290,"mtime":1610868637082,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vkflj1",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/juani/src/exams/microsourcing/yp-client/src/index.js",[],"/home/juani/src/exams/microsourcing/yp-client/src/containers/App/index.js",[],"/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/List/index.js",[],"/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/View/index.js",[],"/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/Create/index.js",[],["32","33"],"/home/juani/src/exams/microsourcing/yp-client/src/containers/Products/Update/index.js",["34"],"import React, { Component } from \"react\";\nimport {\n    Form,\n    Button,\n    Modal,\n    InputGroup,\n} from 'react-bootstrap';\n\nclass ProductUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            show: props.show,\n            closeCallback: props.closeCallback,\n            productName: \"\",\n            urlSegment: 0,\n            sku: 0.00,\n            price: 0\n        };\n        this.updateProduct = this.updateProduct.bind(this);\n        this.handleFormChange = this.handleFormChange.bind(this);\n    }\n\n    async updateProduct(event) {\n        event.preventDefault();\n        const url = `${process.env.REACT_APP_PRODUCTS_API_URI}/api/v1/products/${this.state.id}`;\n\n        await fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json; charset=UTF-8',\n            },\n            body: JSON.stringify({\n                name: this.state.productName,\n                url_segment: this.state.urlSegment,\n                sku: parseInt(this.state.sku, 10),\n                price: parseFloat(this.state.price),\n            })\n        })\n            .then(response => response.json())\n            .then(() => {\n                this.state.closeCallback();\n                this.setState({ show: false });\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n\n    async getProduct(callback = null) {\n        console.log(this.state);\n        const url = `${process.env.REACT_APP_PRODUCTS_API_URI}/api/v1/products/${this.state.id}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n            id: data.data.id,\n            productName: data.data.name,\n            urlSegment: data.data.url_segment,\n            sku: data.data.sku,\n            price: data.data.price\n        }, () => {\n            if (callback) {\n                callback();\n            }\n        });\n    }\n\n    handleFormChange(event, convertPercent = false) {\n        this.setState({ [event.target.id]: convertPercent ? event.target.value / 100 : event.target.value });\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={() => this.setState({ show: false })}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Form\n                    onSubmit={this.updateProduct}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Update Product</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <Form.Group controlId=\"productName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Name of this Product\" onChange={this.handleFormChange} defaultValue={this.state.productName} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"urlSegment\">\n                            <Form.Label>URL Segment</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"URL Segment\" onChange={this.handleFormChange} defaultValue={this.state.urlSegment} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"sku\">\n                            <Form.Label>Product SKU</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Product SKU\" onChange={this.handleFormChange} defaultValue={this.state.sku} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"price\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Price\" onChange={this.handleFormChange} defaultValue={this.state.price} />\n                        </Form.Group>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"outline-secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\n                        <Button type=\"submit\" variant=\"warning\">Re-generate</Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default ProductUpdate;\n","/home/juani/src/exams/microsourcing/yp-client/src/helpers/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":6,"column":5,"nodeType":"41","messageId":"42","endLine":6,"endColumn":15},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]